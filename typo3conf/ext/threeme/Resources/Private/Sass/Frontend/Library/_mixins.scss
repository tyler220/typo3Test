/*!
 * HOWTO - Working with the SASS structure
 * -------------------------------------------------------------------------------------------------
 *
 * #1: Main structure
 * ./Extensions/: SASS partials for TYPO3 extensions you use in your website.
 * ./Frontend/Components/: SASS patterns intended to be used across the site. Pretty much everything in here will be devoted a section in the live style guide.
 * ./Frontend/Library/: Contains only variables and mixins SASS that does not render any actual CSS, but is used later.
 * ./Frontend/Sections/: Layouts and other page-specific stylings. Anything that is not intended to be used in multiple places in a versatile way.
 * ./Vendor/: Vendor libraries in subfolders with SASS container files on top. Uncomment features in container as you need them, when your user stories demand the functionality.
 * ./styles-*.scss: The SASS container files which are compiled to native CSS.
 * ./config.rb: Configuration file for compass, if you want to complie your SASS on your own instead of using third party extensions like "dyncss".
 *
 *
 * #2: SASS container and partials
 * - Uncomment features in vendor container or in the compiling SASS files as you need them, when your user stories demand the functionality.
 * - If you need to add a new or modify a (vendor) partial, create a new one in "Components" or "Sections" and include it in the compiling SASS file.
 *
 * -------------------------------------------------------------------------------------------------
 */


/*!
 * custom mixins
 * -------------------------------------------------------------------------------------------------
 */
@mixin threeme-border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

@mixin threeme-border($border-width: $threeme-border-width, $border-style: $threeme-border-style, $border-color: $threeme-border-color, $border-radius: $border-radius-base) {
    border-style: $border-style;
    border-color: $border-color;
    border-width: $border-width;
    @include threeme-border-radius($border-radius);
}

@mixin threeme-webfont($font-family, $font-path, $font-name, $font-svg-id, $font-weight, $font-style) {
    @font-face {
        font-family: $font-family;
        src: url('#{$font-path}#{$font-name}.eot'); /* IE9 Compat Modes */
        src: url('#{$font-path}#{$font-name}.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
             url('#{$font-path}#{$font-name}.woff2') format('woff2'), /* Super Modern Browsers */
             url('#{$font-path}#{$font-name}.woff') format('woff'), /* Pretty Modern Browsers */
             url('#{$font-path}#{$font-name}.ttf') format('truetype'), /* Safari, Android, iOS */
             url('#{$font-path}#{$font-name}.svg##{$font-svg-id}') format('svg'); /* Legacy iOS */
        font-weight: $font-weight;
        font-style: $font-style;
    }
}

@mixin threeme-gradient-fade-horizontal($start-color: $threeme-white, $end-color: $gray-light) {
    background-image: -webkit-linear-gradient(left, $start-color, $end-color, $start-color);
    background-image: -moz-linear-gradient(left, $start-color, $end-color, $start-color);
    background-image: -ms-linear-gradient(left, $start-color, $end-color, $start-color);
    background-image: -o-linear-gradient(left, $start-color, $end-color, $start-color);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}

// https://css-tricks.com/almanac/properties/w/word-break/
@mixin threeme-hyphenate() {
    -ms-word-break: break-all;
//     word-break: break-all;

     // Non standard for webkit
    word-break: break-word;

    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
}

@mixin threeme-filter($filter) {
    filter: $filter;
    -webkit-filter: $filter;
    -moz-filter: $filter;
    -ms-filter: $filter;
}
